name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  syntax-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout shared-config
        uses: actions/checkout@v4
        with:
          repository: KDReiners/shared-config
          path: config/shared
          ref: main

      - name: Write shared-config commit file
        run: |
          git -C config/shared rev-parse HEAD > shared_config_commit.txt

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            shared_config_commit.txt

      - name: Install system dependencies (pyodbc)
        run: |
          sudo apt-get update
          sudo apt-get install -y unixodbc-dev unixodbc

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Compile Python files (syntax check)
        run: |
          python -m compileall -q bl config || (echo "Syntax errors detected" && exit 1)

      - name: Validate shared JSONs
        if: ${{ hashFiles('config/shared/config/*.json') != '' }}
        run: |
          python - <<'PY'
          import json,glob,sys
          files=glob.glob('config/shared/config/*.json')
          failed=False
          for f in files:
              try:
                  json.load(open(f,'r',encoding='utf-8'))
              except Exception as e:
                  print(f'Invalid JSON: {f}: {e}')
                  failed=True
          sys.exit(1 if failed else 0)
          PY

      - name: Import smoke tests
        run: |
          python - <<'PY'
          import importlib
          modules = [
            'config.paths_config',
            'bl.Cox.cox_auto_processor',
            'bl.Cox.cox_model_trainer',
            'bl.Cox.cox_evaluator',
          ]
          for m in modules:
              importlib.import_module(m)
          print('Smoke imports OK')
          PY

      - name: Outbox smoke test (directory only)
        env:
          OUTBOX_ROOT: ${{ github.workspace }}/.outbox_smoke
        run: |
          python - <<'PY'
          import os
          from pathlib import Path
          from config.paths_config import ProjectPaths
          os.makedirs(os.environ['OUTBOX_ROOT'], exist_ok=True)
          p = ProjectPaths.outbox_cox_experiment_directory(1)
          Path(p).mkdir(parents=True, exist_ok=True)
          assert Path(p).exists()
          print(f'Created: {p}')
          PY

      - name: Create OUTBOX marker
        env:
          OUTBOX_ROOT: ${{ github.workspace }}/.outbox_smoke
        run: |
          python - <<'PY'
          from pathlib import Path
          root = Path('${{ github.workspace }}')/'.outbox_smoke'/'cox'/'experiment_1'
          root.mkdir(parents=True, exist_ok=True)
          (root/'ci_marker.txt').write_text('ok', encoding='utf-8')
          print('Marker written')
          PY

      - name: Upload OUTBOX artifact
        uses: actions/upload-artifact@v4
        with:
          name: outbox-cox-exp1
          path: ${{ github.workspace }}/.outbox_smoke/cox/experiment_1

      

      - name: Print shared-config commit and upload build-info
        run: |
          SHA=$(git -C config/shared rev-parse HEAD)
          echo "shared-config: $SHA"
          echo "shared-config: $SHA" >> $GITHUB_STEP_SUMMARY
          printf "%s" "$SHA" > shared_config_commit.txt
        shell: bash

      - name: Upload build info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: shared_config_commit.txt


